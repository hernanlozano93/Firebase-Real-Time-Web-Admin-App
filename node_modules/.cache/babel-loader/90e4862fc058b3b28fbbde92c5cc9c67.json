{"ast":null,"code":"import * as firebase from \"firebase\";\n\nrequire(\"firebase/firestore\");\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBzkakvvykR5oqjVj1EvtOY2WUN877v38s\",\n  authDomain: \"webtest-a81dc.firebaseapp.com\",\n  databaseURL: \"https://webtest-a81dc.firebaseio.com\",\n  projectId: \"webtest-a81dc\",\n  storageBucket: \"webtest-a81dc.appspot.com\",\n  messagingSenderId: \"180737000927\",\n  appId: \"1:180737000927:web:3d1df2cd0b631a2601b06a\",\n  measurementId: \"G-9CB63L546Y\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nexport const authCheck = async _handleAuthedUser => {\n  return new Promise(resolve => {\n    // Listen for authentication state to change.\n    firebase.auth().onAuthStateChanged(async user => {\n      if (user != null) {\n        console.log(\"We are authenticated now!\");\n        return resolve((await _handleAuthedUser(user)));\n      } else {\n        console.log(\"We did not authenticate.\");\n\n        _handleAuthedUser(null);\n\n        return resolve(null);\n      }\n    });\n  });\n};\n/**\n *\n * @param {*} email\n * @param {*} password\n */\n\nexport const loginWithEmail = (email, password) => {\n  return firebase.auth().signInWithEmailAndPassword(email, password);\n};\nexport const getCurrentUser = () => {\n  return firebase.auth().currentUser;\n};\n/**\n *\n */\n\nexport const logOut = () => {\n  return firebase.auth().signOut();\n};","map":{"version":3,"sources":["/home/sony/CACTUS/Firebase-Real-Time-Web-Admin-App/src/store/firebaseService.js"],"names":["firebase","require","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","authCheck","_handleAuthedUser","Promise","resolve","auth","onAuthStateChanged","user","console","log","loginWithEmail","email","password","signInWithEmailAndPassword","getCurrentUser","currentUser","logOut","signOut"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,UAA1B;;AACAC,OAAO,CAAC,oBAAD,CAAP;;AAEA,IAAIC,cAAc,GAAG;AAEnBC,EAAAA,MAAM,EAAE,yCAFW;AAGjBC,EAAAA,UAAU,EAAE,+BAHK;AAIjBC,EAAAA,WAAW,EAAE,sCAJI;AAKjBC,EAAAA,SAAS,EAAE,eALM;AAMjBC,EAAAA,aAAa,EAAE,2BANE;AAOjBC,EAAAA,iBAAiB,EAAE,cAPF;AAQjBC,EAAAA,KAAK,EAAE,2CARU;AASjBC,EAAAA,aAAa,EAAE;AATE,CAArB;;AAcA,IAAI,CAACV,QAAQ,CAACW,IAAT,CAAcC,MAAnB,EAA2B;AACzBZ,EAAAA,QAAQ,CAACa,aAAT,CAAuBX,cAAvB;AACD;;AAED,OAAO,MAAMY,SAAS,GAAG,MAAMC,iBAAN,IAA2B;AAClD,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC5B;AACAjB,IAAAA,QAAQ,CAACkB,IAAT,GAAgBC,kBAAhB,CAAmC,MAAMC,IAAN,IAAc;AAC/C,UAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AAEA,eAAOL,OAAO,EAAC,MAAMF,iBAAiB,CAACK,IAAD,CAAxB,EAAd;AACD,OAJD,MAIO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;;AACAP,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;;AACA,eAAOE,OAAO,CAAC,IAAD,CAAd;AACD;AACF,KAVD;AAWD,GAbM,CAAP;AAcD,CAfM;AAiBP;;;;;;AAKA,OAAO,MAAMM,cAAc,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACjD,SAAOzB,QAAQ,CAACkB,IAAT,GAAgBQ,0BAAhB,CAA2CF,KAA3C,EAAkDC,QAAlD,CAAP;AACD,CAFM;AAIP,OAAO,MAAME,cAAc,GAAG,MAAM;AAClC,SAAO3B,QAAQ,CAACkB,IAAT,GAAgBU,WAAvB;AACD,CAFM;AAGP;;;;AAGA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAC1B,SAAO7B,QAAQ,CAACkB,IAAT,GAAgBY,OAAhB,EAAP;AACD,CAFM","sourcesContent":["import * as firebase from \"firebase\"\nrequire(\"firebase/firestore\");\n\nvar firebaseConfig = {\n\n  apiKey: \"AIzaSyBzkakvvykR5oqjVj1EvtOY2WUN877v38s\",\n    authDomain: \"webtest-a81dc.firebaseapp.com\",\n    databaseURL: \"https://webtest-a81dc.firebaseio.com\",\n    projectId: \"webtest-a81dc\",\n    storageBucket: \"webtest-a81dc.appspot.com\",\n    messagingSenderId: \"180737000927\",\n    appId: \"1:180737000927:web:3d1df2cd0b631a2601b06a\",\n    measurementId: \"G-9CB63L546Y\"\n\n\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nexport const authCheck = async _handleAuthedUser => {\n  return new Promise(resolve => {\n    // Listen for authentication state to change.\n    firebase.auth().onAuthStateChanged(async user => {\n      if (user != null) {\n        console.log(\"We are authenticated now!\");\n\n        return resolve(await _handleAuthedUser(user));\n      } else {\n        console.log(\"We did not authenticate.\");\n        _handleAuthedUser(null);\n        return resolve(null);\n      }\n    });\n  });\n};\n\n/**\n *\n * @param {*} email\n * @param {*} password\n */\nexport const loginWithEmail = (email, password) => {\n  return firebase.auth().signInWithEmailAndPassword(email, password);\n};\n\nexport const getCurrentUser = () => {\n  return firebase.auth().currentUser;\n};\n/**\n *\n */\nexport const logOut = () => {\n  return firebase.auth().signOut();\n};\n\n\n"]},"metadata":{},"sourceType":"module"}